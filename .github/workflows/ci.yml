name: CI

on:
  pull_request:
    branches: [main, master]
  push:
    branches: [main, master]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        run: uv python install 3.13

      - name: Sync dependencies
        run: uv sync

      - name: Build package
        run: uv build

      - name: Get package version and wheel name
        id: get_version
        shell: bash
        run: |
          VERSION=$(uv run python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "wheel_name=moves-$VERSION-py3-none-any.whl" >> $GITHUB_OUTPUT

      - name: Install built package
        run: uv tool install dist/${{ steps.get_version.outputs.wheel_name }}

      - name: Test installation
        run: moves --version

      - name: Verify version output
        shell: bash
        run: |
          VERSION_OUTPUT=$(moves --version)
          echo "moves --version output: $VERSION_OUTPUT"
          if [[ "$VERSION_OUTPUT" == *"${{ steps.get_version.outputs.version }}"* ]]; then
            echo "✅ Version check passed"
          else
            echo "❌ Version check failed - expected version ${{ steps.get_version.outputs.version }} not found in output"
            exit 1
          fi
